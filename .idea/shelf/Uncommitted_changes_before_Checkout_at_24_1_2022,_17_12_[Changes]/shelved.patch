Index: src/components/customers/QueueCard.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react';\nimport \"./QueueCard.css\";\n\n\nconst QueueCard:React.FC<{queue : [], inUse :boolean}> = ({queue, inUse}) => {\n\n    return (\n        inUse?\n        <div className={\"queue\"}>\n            <div className={queue.length > 4 ? `circle green` : \"circle\"}></div>\n            <div className={queue.length > 3 ? `circle green` : \"circle\"}></div>\n            <div className={queue.length > 2 ? `circle green` : \"circle\"}></div>\n            <div className={queue.length > 1 ? `circle green` : \"circle\"}></div>\n            <div className={queue.length > 0 ? `circle green` : \"circle\"}></div>\n        </div> :\n            <div className={\"queue\"}>\n                Not In Use\n            </div>\n    )\n}\n\nexport default QueueCard;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/customers/QueueCard.tsx b/src/components/customers/QueueCard.tsx
--- a/src/components/customers/QueueCard.tsx	
+++ b/src/components/customers/QueueCard.tsx	
@@ -2,7 +2,7 @@
 import "./QueueCard.css";
 
 
-const QueueCard:React.FC<{queue : [], inUse :boolean}> = ({queue, inUse}) => {
+const QueueCard : React.FC<{queue : any, inUse : boolean}> = ({queue, inUse}) => {
 
     return (
         inUse?
Index: src/components/customers/Customers.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, {useEffect, useLayoutEffect} from 'react';\nimport { useDispatch, useSelector} from \"react-redux\"\n\nimport QueueCard from \"./QueueCard\"\nimport \"./Customers.css\";\n\nimport {queue1Actions} from \"../../store/queue1\"\nimport {customersActions} from \"../../store/customers\"\n\n\nconst Customers:React.FC = () => {\n    const dispatch = useDispatch()\n\n    // @ts-ignore\n    const queue1 = useSelector(state => state.queue1Slice.queue1State);\n    // @ts-ignore\n    const waitingCustomers = useSelector(state => state.customersSlice.customersState);\n\n        useEffect ( () => {\n            const firstCustomer = waitingCustomers[0];\n            console.log(\"Queue1: \" , queue1);\n            console.log(\"First customer: \", firstCustomer)\n\n            if (queue1.length <= 4) {\n                setTimeout(() => {\n                    dispatch(queue1Actions.addToQueue1(firstCustomer))\n                }, 2000);\n                dispatch(customersActions.takeOrder())\n            }\n\n            // if (queue1.length > 0) {\n            //     setTimeout(() => {\n            //         dispatch(queue1Actions.removeFromQueue1())\n            //     }, 5000);\n            // }\n\n\n\n\n        },[queue1])\n    \n\n    return (\n        <div className={\"customers_status\"}>\n            <div className={\"customers_text\"}>Customers Queues</div>\n            <div className={\"queues_container\"}>\n                <QueueCard inUse={true} queue={queue1} />\n                <QueueCard inUse={false} queue={queue1}/>\n                <QueueCard inUse={false} queue={queue1}/>\n            </div>\n        </div>\n    )\n}\n\nexport default Customers;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/customers/Customers.tsx b/src/components/customers/Customers.tsx
--- a/src/components/customers/Customers.tsx	
+++ b/src/components/customers/Customers.tsx	
@@ -1,5 +1,7 @@
 import React, {useEffect, useLayoutEffect} from 'react';
 import { useDispatch, useSelector} from "react-redux"
+import { RootState } from '../../store/index';
+
 
 import QueueCard from "./QueueCard"
 import "./Customers.css";
@@ -10,33 +12,23 @@
 
 const Customers:React.FC = () => {
     const dispatch = useDispatch()
+    const fullQueue = 5;
 
-    // @ts-ignore
-    const queue1 = useSelector(state => state.queue1Slice.queue1State);
-    // @ts-ignore
-    const waitingCustomers = useSelector(state => state.customersSlice.customersState);
+    const queue1 = useSelector((state : RootState) => state.queue1Slice.queue1State);
+   const waitingCustomers = useSelector((state : RootState) => state.customersSlice.customersState);
 
         useEffect ( () => {
             const firstCustomer = waitingCustomers[0];
             console.log("Queue1: " , queue1);
             console.log("First customer: ", firstCustomer)
 
-            if (queue1.length <= 4) {
+            if (queue1.length <= fullQueue) {
                 setTimeout(() => {
                     dispatch(queue1Actions.addToQueue1(firstCustomer))
                 }, 2000);
                 dispatch(customersActions.takeOrder())
             }
 
-            // if (queue1.length > 0) {
-            //     setTimeout(() => {
-            //         dispatch(queue1Actions.removeFromQueue1())
-            //     }, 5000);
-            // }
-
-
-
-
         },[queue1])
     
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"7bf47ea3-2dda-4501-91ab-33fc7f912ea4\" name=\"Changes\" comment=\"\" />\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"TypeScript File\" />\n        <option value=\"TypeScript JSX File\" />\n        <option value=\"CSS File\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"ADD_SUFFIX_TO_CHERRY_PICKS_OF_PUBLISHED_COMMITS\" value=\"false\" />\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProblemsViewState\">\n    <option name=\"selectedTabId\" value=\"ProjectErrors\" />\n  </component>\n  <component name=\"ProjectId\" id=\"23okv4GIC0xJKf4mZatbf2cIUB4\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"ASKED_ADD_EXTERNAL_FILES\" value=\"true\" />\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\n    <property name=\"com.intellij.ide.scratch.ScratchImplUtil$2/New Scratch File\" value=\"HTML\" />\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/src/components/production\" />\n    <property name=\"list.type.of.created.stylesheet\" value=\"CSS\" />\n    <property name=\"node.js.detected.package.eslint\" value=\"true\" />\n    <property name=\"node.js.detected.package.tslint\" value=\"true\" />\n    <property name=\"node.js.selected.package.eslint\" value=\"(autodetect)\" />\n    <property name=\"node.js.selected.package.tslint\" value=\"(autodetect)\" />\n    <property name=\"nodejs_package_manager_path\" value=\"npm\" />\n    <property name=\"settings.editor.selected.configurable\" value=\"org.jetbrains.plugins.github.ui.GithubSettingsConfigurable\" />\n    <property name=\"ts.external.directory.path\" value=\"$APPLICATION_HOME_DIR$/plugins/JavaScriptLanguage/jsLanguageServicesImpl/external\" />\n    <property name=\"vue.rearranger.settings.migration\" value=\"true\" />\n  </component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/sass\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/components/production\" />\n      <recent name=\"$PROJECT_DIR$/src/components/delivery\" />\n      <recent name=\"$PROJECT_DIR$/src/components/customers\" />\n      <recent name=\"$PROJECT_DIR$/sass/pages/\" />\n      <recent name=\"$PROJECT_DIR$/src/pages/Restaurant\" />\n    </key>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"7bf47ea3-2dda-4501-91ab-33fc7f912ea4\" name=\"Changes\" comment=\"\" />\n      <created>1642408053273</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1642408053273</updated>\n      <workItem from=\"1642408054295\" duration=\"4896000\" />\n      <workItem from=\"1642413135019\" duration=\"7812000\" />\n      <workItem from=\"1642423924757\" duration=\"29000\" />\n      <workItem from=\"1642423971925\" duration=\"15000\" />\n      <workItem from=\"1642423988501\" duration=\"57000\" />\n      <workItem from=\"1642424046781\" duration=\"7000\" />\n      <workItem from=\"1642424063856\" duration=\"30000\" />\n      <workItem from=\"1642424132238\" duration=\"20000\" />\n      <workItem from=\"1642424153359\" duration=\"103000\" />\n      <workItem from=\"1642424264626\" duration=\"25810000\" />\n      <workItem from=\"1642661928353\" duration=\"6683000\" />\n      <workItem from=\"1642668656750\" duration=\"18454000\" />\n    </task>\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -4,7 +4,12 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="7bf47ea3-2dda-4501-91ab-33fc7f912ea4" name="Changes" comment="" />
+    <list default="true" id="7bf47ea3-2dda-4501-91ab-33fc7f912ea4" name="Changes" comment="">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/components/customers/Customers.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/customers/Customers.tsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/components/customers/QueueCard.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/src/components/customers/QueueCard.tsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/store/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/store/index.ts" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
Index: src/store/index.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { configureStore } from '@reduxjs/toolkit';\n\nimport customersReducer from './customers';\nimport mealsReducer from './meals';\nimport deliveryReducer from './delivery';\nimport queue1Slice from './queue1';\n\n\n\nexport default configureStore({\n    reducer: {\n        customersSlice: customersReducer,\n        meals: mealsReducer ,\n        delivery: deliveryReducer ,\n        queue1Slice: queue1Slice },\n\n});\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/store/index.ts b/src/store/index.ts
--- a/src/store/index.ts	
+++ b/src/store/index.ts	
@@ -7,7 +7,7 @@
 
 
 
-export default configureStore({
+const store = configureStore({
     reducer: {
         customersSlice: customersReducer,
         meals: mealsReducer ,
@@ -16,3 +16,8 @@
 
 });
 
+export type RootState = ReturnType<typeof store.getState>
+export default store
+
+
+
