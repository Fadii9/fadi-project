Index: src/components/production/SlotCard.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React ,{useState ,useEffect} from 'react';\nimport { useDispatch, useSelector} from \"react-redux\"\n\nimport \"./SlotCard.css\";\n\nimport mealsData from \"../../data/mealsData\";\nimport ingsData from \"../../data/ingredientsData\";\n\nimport {slot1Actions} from \"../../store/slot1\"\nimport {queue1Actions} from \"../../store/queue1\"\n\n\n\nconst SlotCard : React.FC<{inUse : boolean, time : number}> = ({inUse , time}) => {\n    const dispatch = useDispatch();\n    let estTime = 0;\n\n\n    // @ts-ignore\n    const slot1 = useSelector(state => state.slot1Slice.slot1State);\n    // @ts-ignore\n    const queue1 = useSelector(state => state.queue1Slice.queue1State);\n\n    let emptySlot = JSON.stringify(slot1) === '{}';\n\n\n    if (queue1.length > 1 && emptySlot) {\n        dispatch(slot1Actions.addToSlot(queue1[0]))\n        dispatch(queue1Actions.removeFromQueue1())\n        emptySlot = true;\n\n    }\n    let showIngs;\n    if (!emptySlot && estTime == 0) {\n        let meals = slot1.order\n        let mealsIngs = meals.map((meal :string) => {\n            for (let i in mealsData){\n                if (mealsData[i].mealName == meal)\n                    return mealsData[i].ingredients\n            }\n        })\n\n        showIngs = mealsIngs.join(\",\");\n        mealsIngs[0].map((ing : string) => {\n        estTime += ingsData.find(o => o.ing === ing)!.prepTime;\n        })\n\n\n\n    }\n\n\n    return (\n        inUse?\n            <div className={\"slot\"}>\n                <div className={\"slot_image_container\"}>\n                    {emptySlot? \"Empty Slot\" : <img src=\"https://granddigital.com.au/wp-content/uploads/2017/08/Hamburger-Thumbnail-1.jpg\" alt=\"Preparing!\" className={\"slot_image\"} />}\n\n                </div>\n                <div className={\"slot_details\"}>\n                    <span className={\"title\"}>Order ID: </span>{slot1.id} <br/>\n                    <span className={\"title\"}>Producing: </span>{slot1.order} <br/>\n                    <span className={\"title\"}>Estimated Time: </span> {estTime != 0 && `${estTime} Seconds` }\n                </div>\n                <div className={\"slot_status\"}>\n                    <div className={\"slot_status_text\"}>Production Status:</div>\n                    <div className={\"slot_status_ings\"}>{showIngs}</div>\n                </div>\n            </div> :\n            <div className={\"slot\"}>Not In Use</div>\n    )\n}\n\nexport default SlotCard;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/production/SlotCard.tsx b/src/components/production/SlotCard.tsx
--- a/src/components/production/SlotCard.tsx	
+++ b/src/components/production/SlotCard.tsx	
@@ -1,5 +1,7 @@
 import React ,{useState ,useEffect} from 'react';
 import { useDispatch, useSelector} from "react-redux"
+import { RootState } from '../../store/index';
+
 
 import "./SlotCard.css";
 
@@ -15,11 +17,9 @@
     const dispatch = useDispatch();
     let estTime = 0;
 
-
+    const slot1 = useSelector((state : RootState) => state.slot1Slice.slot1State);
     // @ts-ignore
-    const slot1 = useSelector(state => state.slot1Slice.slot1State);
-    // @ts-ignore
-    const queue1 = useSelector(state => state.queue1Slice.queue1State);
+    const queue1 = useSelector((state : RootState) => state.queue1Slice.queue1State);
 
     let emptySlot = JSON.stringify(slot1) === '{}';
 
